[[[ ID ]]]
1569558325
[[[ INDEX ]]]
0
[[[ TITLE ]]]
A Transform Approach to Linear Network Coding for Acyclic Networks with Delay
[[[ AUTHORS ]]]
Teja D. Bavirisetti
Abhinav Ganesan
K. Prasad
B. Sundar Rajan
[[[ ABSTR ]]]
Abstract—The algebraic formulation for linear network coding in acyclic networks with each link having an integer delay is well known. Based on this formulation, for a given set of connections over an arbitrary acyclic network with integer delay assumed for the links, the output symbols at the sink nodes at any given time instant is a F q -linear combination of the input symbols across different generations, where F q denotes the ﬁeld over which the network operates. We use ﬁnite-ﬁeld discrete Fourier transform (DFT) to convert the output symbols at the sink nodes at any given time instant into a F q -linear combination of the input symbols generated during the same generation. We call this as transforming the acyclic network with delay into n-instantaneous networks (n is sufﬁciently large). We show that under certain conditions, there exists a network code satisfying sink demands in the usual (non-transform) approach if and only if there exists a network code satisfying sink demands in the transform approach. Furthermore, assuming time invariant local encoding kernels, we show that the transform method can be employed to achieve half the rate corresponding to the individual source-destination min- cut (which are assumed to be equal to 1) for some classes of three- source three-destination multiple unicast network with delays using alignment strategies when the zero-interference condition is not satisﬁed.
[[[ BODY ]]]
Network coding and its various aspects were studied in [1]– [3] as a means to improve the rate of transmission in networks. The case of acyclic networks with delays was abstracted in [3] as acyclic networks where each link in the network has an integer delay associated with it. The problem of network coding for multiple unicast sessions was considered in [4], [5]. In [6], the concept of interference alignment from interference channels [7] was extended to instantaneous multiple unicast networks with three source-destination pairs for the case where, each source-destination pair has a min-cut of 1. This was called network alignment and it guarantees a minimum throughput when the zero-interference conditions in Theorem 6 of [3] cannot be satisﬁed. Though for speciﬁc networks there may exist schemes which achieve more throughput than that achieved by network alignment, alignment identiﬁes a class of networks where a minimum throughput can be guaranteed.
In the current work, we look at a technique similar to [6] for providing throughput guarantees in (certain) acyclic networks with delays where the zero-interference conditions cannot be satisﬁed, while not making use of any memory at the intermediate nodes (i.e., nodes other than the sources and sinks). The set of all F q -symbols generated by the sources at any particular time instant are said to constitute the same generation. The output symbols at the sink nodes at any given time instant is a F q -linear combination of the input symbols
across different generations, where F q denotes the ﬁeld over which the network operates. Using techniques similar to those used in Multiple Input Multiple Output-Orthogonal Frequency Division Multiplexing (MIMO-OFDM) [8], we convert the output symbols at the sink nodes at any given time instant into a F q -linear combination of the input symbols generated during the same generation. Since we use Discrete Fourier Transform (DFT) over a ﬁnite-ﬁeld, we call this technique as the transform technique. As a ﬁrst step towards guaranteeing a minimum throughput when the zero-interference conditions cannot be satisﬁed in an acyclic network with delay, we consider a three-source three-destination multiple unicast (3-S 3 -D MU) network with the source-destination pair denoted by S i -T i , i = 1, 2, 3. We also assume a min-cut of one between source S i and destination T i . Under this set-up, we apply the transform techniques and network alignment to ﬁnd conditions under which the network can guarantee a throughput close to half for every source-destination pair S i - T i , i = 1, 2, 3. This method does not make use of memory at the intermediate nodes. The case of three-source three- destination multiple unicast instantaneous networks required the use of time varying local encoding kernels (LEKs) for network alignment [6] while we show that there can exist networks with delay where time invariant LEKs are sufﬁcient for network alignment.
The organization and contributions of this paper are sum- marized as follows:
After reviewing the system model for acyclic networks in Section II, using DFT over a ﬁnite ﬁeld, we convert the output symbols at the sink nodes at any given time instant into a F q -linear combination of the input symbols generated during the same generation. We call this as transforming the acyclic network with delay into n- instantaneous networks, n being sufﬁciently large (Sec- tion III).
We show that under certain conditions, there exists a network code satisfying sink demands in the usual (non- transform) approach if and only if there exists a network code satisfying sink demands in the transform approach (Section III).
For some classes of three source-three destination mul- tiple unicast network with delays which do not satisfy the zero-interference conditions, we employ the transform techniques to achieve the following.
equal to one for i, j = 1, 2, 3 and i �= j, we propose a solution to achieve half the rate corresponding to the individual source-destination min-cut, with time- invariant Local Encoding Kernels (LEKs) (Section IV).
Due to space constraints, the proofs of all the theorems and other claims, along with illustrative examples are given in [10].
Notations: The cardinality of a set E is denoted by |E|. A superscript of t accompanying any variable (for example, � (t) ) or any matrix (for example, M (t) ) denotes that they are a func- tion of time t. The i th row, j th column element of a matrix A is denoted by [A] ij . The Kronecker product of matrices A and B is denoted by A ⊗ B. The notation diag(A 1 , A 2 , · · · , A n ) represents a block diagonal matrix whose diagonal matrices are given by (A 1 , A 2 , · · · , A n ) . The determinant of a square matrix A is denoted by det(A). An identity matrix of size µ × µ is denoted by I µ . For 3-S 3-D MU networks we shall use the term destination to denote sink.
First, we shall brieﬂy review the system model from [3]. We consider a network represented by a Directed Acyclic Graph (DAG) G = (V, E), where V is the set of nodes and E is the set of directed links. We assume that every directed link between a pair of nodes represents an error-free link and has a capacity of one F q symbol per link-use. Multiple links between two nodes are allowed and the i th directed link from v 1 ∈ V to v 2 ∈ V is denoted by (v 1 , v 2 , i) . The head and tail of a link e = (v 1 , v 2 , i) are denoted by v 2 = head(e) and v 1 = tail(e). A link between a pair of nodes can have an arbitrary ﬁnite integer delay. Let X (v) = {X(v, 1), X(v, 2), ..., X(v, µ v )} be the collection of discrete random processes that are generated at the node v. Let X v = [X(v, 1) X(v, 2) ... X(v, µ v )] T . The random process transmitted through link e is denoted by Z(e) . Communication is to be established between selected nodes in the network, i.e., we are required to replicate a subset of the random process in X (v) at some different node v � . A connection c is deﬁned as a triple (v, v � , X (v, v � )) ∈ V × V × P X (v) , where P X (v) denotes the power-set of X (v). For the connection c, v is called the source and v � is called the sink of c, i.e., v = source(c) and v � = sink(c) (source(c) �= sink(c)). The collection of ν v � random processes Y(v � ) = {Y (v � , 1), Y (v � , 2), ..., Y (v � , ν v � )} denotes the output at sink v � . Let Y v � = [Y (v � , 1) Y (v � , 2) ... Y (v � , ν v � )] T .
The input random processes X(v, i), output random pro- cesses Y (u, j) and random processes Z(e) transmitted on the link e are considered as a power series in a delay parameter D, i.e., X(v, i) = � ∞ t =0 X (t) (v, i)D t , Y (u, j) = � ∞ t =0 Y (t) (u, j)D t and Z(e) = � ∞ t =0 Z (t) (e)D t .
We say that G is a F q -linear network, if for all links the random process Z(e) on a link e = (v, u, i) ∈ E satisﬁes
where, α j,e and β e � ,e belong to F q and q = p m , for some prime number p and positive integer m > 0. The output at any sink node v � , is taken to be
where, � e � ,j ∈ F q . Note that in [3], the counterpart to (1) involves linear combinations of the received processes and output processes across current and previous time instants, resulting in the decoding of the received processes at the sinks to the demanded input processes. However, in (1), at every sink, we only deﬁne a preprocessing of the received symbols corresponding to the previous time instant alone. The outputs Y (t+1) (v � , j) as t varies, will then be used by sink-j to decode the demanded input processes using sufﬁcient delay elements for feed-forward and feedback operations. The coefﬁcients, α j,e , β e � ,e and � e � ,j are also called local encoding kernels (LEKs). The LEKs are denoted by ε. These LEKs are assumed to be time invariant.
We assume some ordering among the sources so that the random process generated by the sources can be denoted, with- out loss of generality, as X 1 (D) , X 2 (D) , ..., X s (D) , where s denotes the number of sources and X i (D) is a µ i × 1 column vector given by X i (D) = [X i 1 (D) X i 2 (D) . . . X iµ i (D)] T . Similarly, we assume some ordering among the sinks so that the output random process at the sinks can be denoted, without loss of generality, as Y 1 (D) , Y 2 (D) , ..., Y r (D) , where r denotes the number of sinks and Y i (D) is a ν i × 1 column vector given by Y i (D) = [Y i 1 (D) Y i 2 (D) . . . Y iν i (D)] T . Let
where, M(D) denotes the ν × µ network transfer matrix. Throughout the paper, we assume the elements of M(D) to be polynomials in D and not rational functions in D. It is understood that the elements of M(D) are also polynomial functions of ε and are not explicitly indicated. Now, M(D) can also be written as
where, M ij (D) denote the ν j × µ i network transfer matrix from source-i to sink-j. Let d � max and d � min denote the maximum and the minimum of all path delays from source-i to sink-j, ∀ (i, j), between which a path exists. Hence, the power series of M(D), in the delay parameter D, can be written as
where, the matrix-coefﬁcient M (d) of D d is a ν × µ matrix. Since D d � min just adds a constant additional delay to all the
outputs, without loss of generality, we can take M(D) and M ij (D) to be
For each sink-j, we also deﬁne M j (D) to be the ν j × µ submatrix of M(D) that captures the transfer function between all the sources and the sink-j, i.e.,
In the network G, let C j denote the set of all connections to sink-j. Let C = ∪ r j =1 C j . The following lemma from [3] states the conditions for solvability of acyclic networks with delay.
Lemma 1 ( [3]): An acyclic network with delay is solvable iff there exists an assignment to the LEKs ε such that the following conditions are satisﬁed.
1) Zero-Interference: M (d) ij (l i ) = 0 , for all pairs (source-i, sink-j) of nodes such that (source-i, sink-j, X i (l i ) (D) ) �∈ C j for all 0 ≤ d ≤ d max , where M (d) ij (l i ) denotes the l th i column of M (d) ij and X i (l i ) (D) denotes the l th i
2) Invertibility: For every sink-j, the square submatrix M � j (D) of M j (D) formed by juxtaposition of the columns of M ij (D) , ∀ i, except those involved in the zero-interference conditions, is invertible over F q (D) , the ﬁeld of rationals over F q .
A network code for (G, C) is deﬁned to be a feasible network code if it achieves the given set of demands at the sinks i.e., if the above zero-interference and the invertibility conditions are satisﬁed.
In this section, we show that the output symbols at all the sinks which was originally a F q -linear combination of the input symbols across the different generations, at any given time instant, can be transformed into a F q -linear combination of the input symbols across the same generation.
where, A i (0 ≤ i ≤ L) are matrices of size ν × µ, whose elements belong to F q and n >> L. Note that the (i + 1) th row of matrices is a circular shift of the i th row of matrices in A . We assume that n divides q − 1. The choice of n is such that there exists an α ∈ F q so that n is the smallest integer for which α n = 1 . This is indeed possible [9]. The ﬁnite-ﬁeld DFT matrix F is given by
Note that F − 1 exists [9], [10]. Let Q µ = F ⊗ I µ and Q ν = F ⊗ I ν . The inverse of Q µ is given by Q − 1 µ = F − 1 ⊗ I µ (∵ Q µ Q − 1 µ = (F ⊗ I µ )(F − 1 ⊗ I µ ) = (F F − 1 ) ⊗ I µ = I nµ ).
The following theorem will be useful in establishing the results subsequently.
Theorem 1: The matrix A can be block diagonalized as A = Q ν ˆ AQ − 1 µ where, ˆ A = diag( ˆ A n− 1 , ˆ A n− 2 , . . . , ˆ A 0 ) .
Now, consider a transmission scheme, where we take n (>> d max ) generations of input symbols at each source and ﬁrst transmit the last d max generations (which we call the cyclic preﬁx) followed by the n generations of input symbols. Hence, n + d max time slots at each source are used for transmitting n generations. Then, Y j (D) can be written as (7) using (4). Now, after discarding the ﬁrst d max outputs at sink j, (7) can be re-written as (8). Using Theorem 1, (8) can be re-written as
Now, at each source-i, transmit X � i n = Q µ i X i n instead of X i n . Then, at each sink-j, we receive Y � j n . Let Y j n = Q − 1 ν j Y � j n . From (9) we have,
Hence, each element of Y j (t) is a F q -linear combination of the input symbols across the same generation. We now say that we have transformed the acyclic network with delay into n -instantaneous networks. Note that the linear processing of multiplying by matrices Q µ i at source-i and Q − 1 ν j at sink-j are done in a distributed fashion which is necessary because the sources and sinks are distributed in the actual network.
Remark 1: One can observe that transmitting X � i n = Q µ i X i n implies taking DFT across n generations of each of the µ i random-processes generated at source-i. Similarly, the pre-multiplication by Q − 1 ν j at sink-j simply implies taking IDFT across n generations of each of the ν j random-processes received. The entire processing, including the addition of cyclic preﬁx at source-i and removal of cyclic preﬁx at sink-j is shown in a block diagram in Fig. 1.
Similar to the zero-interference and invertibility conditions in Lemma 1, we have the following theorem for solvability of (11).
Theorem 2: An acyclic network (G, C) with delay, incorpo- rating the transform techniques, is solvable iff there exists an assignment to the LEKs ε such that the following conditions are satisﬁed.
1) Zero-Interference: ˆ M (t) ij (l i ) = 0 for all pairs (source-i, sink-j) of nodes such that (source-i, sink-j, X i (t) (l i ) ) �∈ C j for 0 ≤ t ≤ n − 1.
2) Invertibility: If C j contains the connections (source-i 1 , sink-j, X i 1 (t) (l i 1 ) ), (source-i 2 , sink-j, X i 2 (k) (l i 2 ) ), · · · , (source-i s � , sink-j, X i s� (t) (l i s� ) ), then, the sub-matrix [ ˆ M (t) i 1 j (l i 1 ) ˆ M (t) i 2 j (l i 2 ) · · · ˆ M (t) i
(l i s� )] is a nonsingular ν j × ν j matrix for 0 ≤ t ≤ n − 1.
The zero-interference condition of Lemma 1 and Theorem 2 are equivalent [10]. The network code which satisﬁes the invertibility and the zero-interference conditions for (G, C) in the transform approach using a suitable choice of α for the DFT operations is deﬁned as feasible transform network
code for (G, C). The following theorem concerns with the relationship between the existence of a feasible network code and a feasible transform network code for (G, C).
Theorem 3: Let (G, C) be the given acyclic delay network. There exists a feasible transform network code for (G, C) if and only if there exists a feasible network code for (G, C) such that (D − 1) � f(D) where, f(D) is given by f(D) = � r j =1 det �M � j (D) �.
In the next section we shall apply these transform techniques to 3-S 3-D MU network with delays.
In [6], the concept of interference alignment from interfer- ence channels was extended to instantaneous acyclic multiple unicast networks with three source-destination pairs for the case where, each source-destination pair has a min-cut of 1 and where, the zero-interference conditions in Theorem 6 of [3] cannot be satisﬁed. This was called network alignment. It was shown in [6] that, for a class of such networks, it is possible to achieve a throughput close to 1/2 for every source- destination pair via network alignment.
In this section, we deal with acyclic 3-S 3-D MU network with delays where each source-destination pair S i − T i has a
min-cut of 1 and the min-cut between S i −T j is greater than or equal to 1, for all i �= j. We use the results from the previous section and show that, using network alignment, even when the zero-interference conditions of Lemma 1 or Theorem 2 cannot be satisﬁed, for a class of 3-S 3-D MU networks with arbitrary integer delays on its links we can achieve a throughput close to 1/2 for every source-destination pair.
Let the random process injected into the network by source S i , i = 1, 2, 3, be X i (D) . Source S i needs to communicate only with destination T i . Here, µ i = 1 and ν j = 1 , i, j = 1, 2, 3 .
Consider a transmission scheme, where we take 2n + 1 (>> d max ) generations of input symbols at each source and ﬁrst transmit last d max generations (i.e., the cyclic preﬁx) followed by the 2n + 1 generations of input symbols. Let Q 1 X 2n+1 i 	 be the input symbols transmitted by source-i where, X 2n+1 i 	 = [X (2n) i X (2n−1) i 	 · · · X (0) i ] T . Also, let X 2n+1 1 =
a (2n + 1) × (n + 1) matrix, V 2 is a (2n + 1) × n matrix, V 3 is a (2n + 1) × n matrix, and
where, X � 1 n +1 , X � 2 n , and X � 3 n denote the (n + 1), n, and n independent input symbols generated by sources-1, 2, and 3 respectively. Now, from (10), for j ∈ {1, 2, 3}
where, Y j 2n+1 denotes the (2n + 1) output symbols at destination-j. The objective is to recover the independent input symbols X � 1 n +1 , X � 2 n , and X � 3 n at the destinations-1, 2, and 3, from the output symbols Y 2n+1 1 , Y 2n+1 2 , and Y 2n+1 3
Lemma 2: Determinant of the matrix ˆ M ij ∀ (i, j) ∈ {1, 2, 3} is a non-zero polynomial in ε.
A direct consequence of the above lemma is that ˆ M ij is invertible. Deﬁne the matrices
where, W = [1 1 · · · 1] T (all ones vector of size (2n+1)×1). Theorem 4: The input symbols X � 1 n +1 , X � 2 n ,and X � 3 n can
be exactly recovered at T 1 , T 2 , and T 3 from the output symbols Y 2n+1 1 , Y 2n+1 2 , and Y 2n+1 3 	 respectively subject to p � 2n + 1, if the following conditions hold.
The condition p � 2n+1 arises because of the constraint that 2n + 1|q − 1 (where, q = p m ) [10]. When the conditions of the above theorem are satisﬁed, we say that network alignment is feasible. When network alignment is feasible, throughputs
of (n+1) (2n+1) , n (2n+1) , and n (2n+1) are achieved for the source- destination pairs S 1 − T 1 , S 2 − T 2 , and S 3 − T 3 respectively. Hence, as n → ∞, a throughput of 1/2 is achieved for every source-destination pair.
Remark 2: Note that, for 3-S 3-D MU network without delay [6], it was not possible to achieve network alignment without changing the LEKs with time. When there is no delay, the matrices T , R, and S, given in (12) would simply be equal to f(ε)I 2n+1 (where, f(ε) is some polynomial in ε) and hence, the matrices V 1 , V 2 and V 3 as given in (13)-(15) are themselves not full-rank matrices. Hence, ε was varied with time in [6]. However, in the case of delay, the matrices T , R, and S are not necessarily scaled identity matrices and network alignment can be feasible even with time-invariant LEKs (see [10] for example).
The choice of the matrices V 1 , V 2 and V 3 and the conditions for feasibility of network alignment have been generalized with time-varying LEKs in [10].
Transformation of an acyclic network with delay into n- instantaneous networks enabled us to apply the network align- ment solution of [6] to 3-S 3-D MU networks with delays and it was shown that there can exist networks where network alignment is feasible even by using time-invariant LEKs which is not possible in the delay-free counterpart. Optimality of network alignment, when feasible, for the class of 3-S 3-D MU networks with delays remains to be investigated.
[[[ REFS ]]]
R. Ahlswede
N. Cai
R. Li
R. Yeung
--
Network Information Flow
----
N. Cai
R. Li
R. Yeung
--
Linear Network Coding
----
R. Koetter
M. Medard
--
An Algebraic Approach to Network Coding
----
D. Traskov
N. Ratnakar
D. S. Lun
R. Koetter
M. Medard
--
Network coding for multiple unicasts: An approach based on linear optimization
----
T. Ho
Y. H. Chang
K. J. Han
--
On constructive network coding for multiple unicasts
----
A. Ramakrishnan
A. Das
H. Maleki
A. Markopoulou
S. Jafar
S. Vishwanath
--
Network coding for three unicast sessions: Interference alignment approaches
----
V. R. Cadambe
S. A. Jafar
--
Interference alignment and the degrees of freedom for the K-user interference channel
----
G. G. Raleigh
J. M. Ciofﬁ
--
Spatio-Temporal Coding for Wireless Communication
----
E. Blahut
--
Algebraic Codes on Lines, Planes, and Curves
----
T. D. Bavirisetti
G. Abhinav
K. Prasad
B. Sundar Rajan
--
A Transform Approach to Linear Network Coding for Acyclic Networks with Delay
[[[ META ]]]
parsed -> yes
file -> public\files\isit2012\1569558325.pdf
[[[ LINKS ]]]

